networks:
  stack:
    name: hive
services:
  app:
    environment:
      APP_BASE_URL: http://localhost:8080
      AUTH_ORGANIZATION_OIDC: "1"
      AUTH_REQUIRE_EMAIL_VERIFICATION: "0"
      EMAILS_ENDPOINT: http://emails:3011
      GRAPHQL_ENDPOINT: http://server:3001/graphql
      NODE_ENV: production
      PORT: 3000
      SERVER_ENDPOINT: http://server:3001
      SUPERTOKENS_API_KEY: a8c26c0c4ab7502b6b93dbe9d7147e84
      SUPERTOKENS_CONNECTION_URI: http://supertokens:3567
    image: ghcr.io/kamilkisiela/graphql-hive/app:ce3ff29967305cb71b0e88a87c7de70d07717434
    networks:
      stack: null
    ports:
      - published: 8080
        target: 3000
  broker:
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_BROKER_ID: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    healthcheck:
      interval: 15s
      retries: 6
      start_period: 15s
      test:
        - CMD
        - cub
        - kafka-ready
        - "1"
        - "5"
        - -b
        - 127.0.0.1:9092
        - -c
        - /etc/kafka/kafka.properties
      timeout: 10s
    hostname: broker
    image: confluentinc/cp-kafka:7.5.0
    networks:
      stack: null
    ulimits:
      nofile:
        hard: 40000
        soft: 20000
    volumes:
      - ./.hive/broker/db:/var/lib/kafka/data:rw
  clickhouse:
    environment:
      CLICKHOUSE_PASSWORD: e3d69e83e92d68f664d1783f33c73265
      CLICKHOUSE_USER: clickhouse
    healthcheck:
      interval: 5s
      retries: 6
      start_period: 10s
      test:
        - CMD
        - wget
        - --spider
        - -q
        - localhost:8123/ping
      timeout: 5s
    image: clickhouse/clickhouse-server:23.8-alpine
    networks:
      stack: null
    volumes:
      - ./.hive/clickhouse/db:/var/lib/clickhouse:rw
  db:
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: registry
      POSTGRES_PASSWORD: 2d5c10dcb6635092ae220b1d908b30f3
      POSTGRES_USER: postgres
    healthcheck:
      interval: 5s
      retries: 6
      test:
        - CMD-SHELL
        - pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      timeout: 5s
    image: postgres:14.9-alpine
    networks:
      stack: null
    volumes:
      - ./.hive/postgres:/var/lib/postgresql/data:rw
  emails:
    depends_on:
      redis:
        condition: service_healthy
    environment:
      EMAIL_FROM: no-reply@graphql-hive.com
      EMAIL_PROVIDER: sendmail
      NODE_ENV: production
      PORT: 3011
      REDIS_HOST: redis
      REDIS_PASSWORD: c3790f586f39c32fdf259952e22182f5
      REDIS_PORT: 6379
    image: ghcr.io/kamilkisiela/graphql-hive/emails:ce3ff29967305cb71b0e88a87c7de70d07717434
    networks:
      stack: null
  migrations:
    depends_on:
      clickhouse:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_MIGRATOR: up
      CLICKHOUSE_PASSWORD: e3d69e83e92d68f664d1783f33c73265
      CLICKHOUSE_PORT: "8123"
      CLICKHOUSE_PROTOCOL: http
      CLICKHOUSE_USERNAME: clickhouse
      MIGRATOR: up
      POSTGRES_DB: registry
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: 2d5c10dcb6635092ae220b1d908b30f3
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      TS_NODE_TRANSPILE_ONLY: "true"
    image: ghcr.io/kamilkisiela/graphql-hive/storage:ce3ff29967305cb71b0e88a87c7de70d07717434
    networks:
      stack: null
  policy:
    depends_on:
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3012
    image: ghcr.io/kamilkisiela/graphql-hive/policy:ce3ff29967305cb71b0e88a87c7de70d07717434
    networks:
      stack: null
  redis:
    environment:
      REDIS_DISABLE_COMMANDS: FLUSHDB,FLUSHALL
      REDIS_PASSWORD: c3790f586f39c32fdf259952e22182f5
    healthcheck:
      interval: 5s
      retries: 6
      start_period: 5s
      test:
        - CMD
        - redis-cli
        - ping
      timeout: 10s
    image: bitnami/redis:7.2.1
    networks:
      stack: null
    volumes:
      - ./.hive/redis/db:/bitnami/redis/data:rw
  s3:
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_ROOT_USER: minioadmin
    healthcheck:
      interval: 30s
      retries: 3
      test:
        - CMD
        - curl
        - -f
        - http://localhost:9000/minio/health/live
      timeout: 20s
    image: quay.io/minio/minio:RELEASE.2022-11-29T23-40-49Z
    networks:
      stack: null
    ports:
      - published: 9000
        target: 9000
      - published: 9001
        target: 9001
    volumes:
      - ./.hive/minio/db:/data:rw
  s3_provision_buckets:
    depends_on:
      s3:
        condition: service_healthy
    entrypoint:
      '/bin/sh -c " /usr/bin/mc alias set myminio http://s3:9000 minioadmin
      minioadmin; /usr/bin/mc ls myminio/artifacts >/dev/null 2>&1 || /usr/bin/mc
      mb myminio/artifacts; exit 0"

      '
    image: quay.io/minio/mc:RELEASE.2022-11-17T21-20-39Z
    networks:
      stack: null
  s3_reverse_proxy:
    command: caddy reverse-proxy --from :8083 --to s3:9000 --change-host-header
    depends_on:
      s3:
        condition: service_healthy
    image: caddy:2.7.4-alpine
    networks:
      stack: null
    ports:
      - published: 8083
        target: 8083
  schema:
    depends_on:
      redis:
        condition: service_healthy
    environment:
      ENCRYPTION_SECRET: ededf05014735803fb0ea3d9950af644
      NODE_ENV: production
      PORT: 3002
      REDIS_HOST: redis
      REDIS_PASSWORD: c3790f586f39c32fdf259952e22182f5
      REDIS_PORT: 6379
    image: ghcr.io/kamilkisiela/graphql-hive/schema:ce3ff29967305cb71b0e88a87c7de70d07717434
    networks:
      stack: null
  server:
    depends_on:
      clickhouse:
        condition: service_healthy
      emails:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
      policy:
        condition: service_healthy
      redis:
        condition: service_healthy
      s3_provision_buckets:
        condition: service_completed_successfully
      schema:
        condition: service_healthy
      tokens:
        condition: service_healthy
      webhooks:
        condition: service_healthy
    environment:
      AUTH_ORGANIZATION_OIDC: "1"
      CDN_API: "1"
      CDN_API_BASE_URL: http://localhost:8082
      CDN_AUTH_PRIVATE_KEY: 029629c2b71cbda68c2cf89d3f89cf47
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PASSWORD: e3d69e83e92d68f664d1783f33c73265
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_PROTOCOL: http
      CLICKHOUSE_USERNAME: clickhouse
      EMAILS_ENDPOINT: http://emails:3011
      ENCRYPTION_SECRET: ededf05014735803fb0ea3d9950af644
      NODE_ENV: production
      PORT: 3001
      POSTGRES_DB: registry
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: 2d5c10dcb6635092ae220b1d908b30f3
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      REDIS_HOST: redis
      REDIS_PASSWORD: c3790f586f39c32fdf259952e22182f5
      REDIS_PORT: 6379
      S3_ACCESS_KEY_ID: minioadmin
      S3_BUCKET_NAME: artifacts
      S3_ENDPOINT: http://s3:9000
      S3_PUBLIC_URL: http://localhost:8083
      S3_SECRET_ACCESS_KEY: minioadmin
      SCHEMA_ENDPOINT: http://schema:3002
      SCHEMA_POLICY_ENDPOINT: http://policy:3012
      SUPERTOKENS_API_KEY: a8c26c0c4ab7502b6b93dbe9d7147e84
      SUPERTOKENS_CONNECTION_URI: http://supertokens:3567
      TOKENS_ENDPOINT: http://tokens:3003
      WEBHOOKS_ENDPOINT: http://webhooks:3005
      WEB_APP_URL: http://localhost:8080
    image: ghcr.io/kamilkisiela/graphql-hive/server:ce3ff29967305cb71b0e88a87c7de70d07717434
    networks:
      stack: null
    ports:
      - published: 8082
        target: 3001
  supertokens:
    depends_on:
      db:
        condition: service_healthy
    environment:
      API_KEYS: a8c26c0c4ab7502b6b93dbe9d7147e84
      POSTGRESQL_DATABASE_NAME: registry
      POSTGRESQL_HOST: db
      POSTGRESQL_PASSWORD: 2d5c10dcb6635092ae220b1d908b30f3
      POSTGRESQL_PORT: 5432
      POSTGRESQL_TABLE_NAMES_PREFIX: supertokens
      POSTGRESQL_USER: postgres
    image: registry.supertokens.io/supertokens/supertokens-postgresql:6.0
    networks:
      stack: null
  tokens:
    depends_on:
      migrations:
        condition: service_completed_successfully
    environment:
      NODE_ENV: production
      PORT: 3003
      POSTGRES_DB: registry
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: 2d5c10dcb6635092ae220b1d908b30f3
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      REDIS_HOST: redis
      REDIS_PASSWORD: c3790f586f39c32fdf259952e22182f5
      REDIS_PORT: 6379
    image: ghcr.io/kamilkisiela/graphql-hive/tokens:ce3ff29967305cb71b0e88a87c7de70d07717434
    networks:
      stack: null
  usage:
    depends_on:
      broker:
        condition: service_healthy
      tokens:
        condition: service_healthy
    environment:
      KAFKA_BROKER: broker:29092
      KAFKA_BUFFER_DYNAMIC: "1"
      KAFKA_BUFFER_INTERVAL: 1000
      KAFKA_BUFFER_SIZE: 350
      KAFKA_CONNECTION_MODE: docker
      KAFKA_TOPIC: usage_reports_v2
      NODE_ENV: production
      PORT: 3006
      TOKENS_ENDPOINT: http://tokens:3003
    image: ghcr.io/kamilkisiela/graphql-hive/usage:ce3ff29967305cb71b0e88a87c7de70d07717434
    networks:
      stack: null
    ports:
      - published: 8081
        target: 3006
  usage-ingestor:
    depends_on:
      broker:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    environment:
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PASSWORD: e3d69e83e92d68f664d1783f33c73265
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_PROTOCOL: http
      CLICKHOUSE_USERNAME: clickhouse
      KAFKA_BROKER: broker:29092
      KAFKA_CONCURRENCY: "1"
      KAFKA_CONNECTION_MODE: docker
      KAFKA_CONSUMER_GROUP: usage-ingestor-v2
      KAFKA_TOPIC: usage_reports_v2
      NODE_ENV: production
      PORT: 3007
    image: ghcr.io/kamilkisiela/graphql-hive/usage-ingestor:ce3ff29967305cb71b0e88a87c7de70d07717434
    networks:
      stack: null
  webhooks:
    depends_on:
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3005
      REDIS_HOST: redis
      REDIS_PASSWORD: c3790f586f39c32fdf259952e22182f5
      REDIS_PORT: 6379
    image: ghcr.io/kamilkisiela/graphql-hive/webhooks:ce3ff29967305cb71b0e88a87c7de70d07717434
    networks:
      stack: null
  zookeeper:
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    hostname: zookeeper
    image: confluentinc/cp-zookeeper:7.5.0
    networks:
      stack: null
    ulimits:
      nofile:
        hard: 40000
        soft: 20000
    volumes:
      - ./.hive/zookeeper/db:/var/lib/zookeeper/data:rw
version: "3.8"
